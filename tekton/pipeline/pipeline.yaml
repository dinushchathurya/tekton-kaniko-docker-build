apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-build-push
spec:
  description: |
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
  - name: repo-url
    type: string
  - name: image-reference
    type: string
  - name: image-tag
    type: string
  - name: manifest-repo
    type: string
  workspaces:
  - name: shared-data
  - name: docker-credentials
  tasks:
  - name: fetch-source
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
    - name: deleteExisting
      value: "true"
  - name: build-push
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: IMAGE
      value: $(params.image-reference):$(tasks.fetch-source.results.commit)
  - name: fetch-manifest
    runAfter: ["build-push"]
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.manifest-repo)
    - name: deleteExisting
      value: "true"
  - name: list-source
    runAfter: ["fetch-manifest"]
    taskRef:
      name: list-source
    workspaces:
    - name: source
      workspace: shared-data
  - name: update-manifest
    runAfter: ["list-source"]
    taskRef:
      name: kustomize-edit
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: file-path
      value: tekton-node-app/overlays/*/*kustomization.yaml
    - name: new-tag
      value: $(tasks.fetch-source.results.commit)
  finally:
  - name: finaltask
    params:
      - name: aggregateTasksStatus
        value: "$(tasks.status)"
    taskSpec:
      params:
        - name: aggregateTasksStatus
      steps:
        - image: ubuntu
          name: check-task-status
          script: |
            if [ $(params.aggregateTasksStatus) == "Failed" ]
            then
              echo "Looks like one or more tasks returned failure, continue processing the failure"
            fi